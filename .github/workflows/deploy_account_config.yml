name: 'Cloudflare Account Level Config Deploy'
on:
  push:
    branches:
      - main
      - feature/*

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment to deploy the config file'
        options:
          - dev
          - tst
          - stg
          - prd

permissions:
  id-token: write         # This is required for requesting the JWT
  contents: read          # This is required for checking out the code

jobs:
  setup:
    runs-on: [default]
    outputs:
      DHP_RUNNER_ENDPOINT: ${{ steps.runner-endpoint.outputs.DHP_RUNNER_ENDPOINT }}
    steps:
      - name: Check out account config repository
        uses: actions/checkout@v4

      - name: Validate config file exists
        id: validate-file-exists
        run: |
          environment=${{ github.event.inputs.environment }}

          # Check account parameter file exists in the corresponding environment directory
          if [[ ! -f "${environment}/account_parameters.yml" ]]; then
            echo "Account parameters file does not exist for environment $environment"
            exit 1
          fi

      - name: Define DHP Runner Endpoint
        id: runner-endpoint
        run: |
          environment=${{ github.event.inputs.environment }}
          echo "environment: $environment"

          if [[ $environment == "dev" ]]; then
            RUNNER_ENDPOINT="https://d-s-es1-app-alb.chpcyberp1dev01.aws.test.au.internal.cba"
          elif [[ $environment == "tst" ]]; then
            RUNNER_ENDPOINT="https://t2-s-es1-app-alb.chpcyberp1t201.aws.test.au.internal.cba"
          else
            echo "Invalid environment"
            exit 1
          fi
          echo "DHP_RUNNER_ENDPOINT for $environment: $RUNNER_ENDPOINT"
          
          # exporting the DHP_RUNNER_ENDPOINT as an output
          # Ref: https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions#setting-an-output-parameter
          # Ref: https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
          echo "DHP_RUNNER_ENDPOINT=$RUNNER_ENDPOINT" >> $GITHUB_OUTPUT

  plan-config:
    runs-on: [default]
    needs: setup
    steps:
      - name: Plan account config for ${{ github.event.inputs.environment }}
        run: |
          environment=${{ github.event.inputs.environment }}
          echo "environment: $environment"
          echo "-----"
          echo 
          DHP_RUNNER_ENDPOINT= ${{ needs.setup.outputs.DHP_RUNNER_ENDPOINT }}
          echo "DHP_RUNNER_ENDPOINT: $DHP_RUNNER_ENDPOINT"

          # Generate ID token
 #         id_token=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://DHPRunnerAPI" | jq -r '.value')
 #         echo "ID Token: $id_token"
          
          # Invoke DHP Api for Plan
 #         plan_response_status_code=$(curl -X GET "$DHP_RUNNER_ENDPOINT/runner/account/${environment}" -H 'accept: application/json' -H 'Content-Type: application/json' -H "X-Github-Auth-Header: Bearer $id_token" -s -o output.json -w "%{http_code}")
 #         echo "Plan Response Status Code: $plan_response_status_code"

          # Print the output
 #         cat output.json | jq -r '.detail'

          # Check if the plan was successful
 #         if [[ "${plan_response_status_code}" != "200" ]]; then
 #           echo "Error in executing plan"
 #           exit 1
 #         else
 #           echo "Plan executed successfully"
 #         fi

#  deploy-config:
#    runs-on: [default]
#    if: github.ref == 'refs/heads/main'
#    needs: [setup, plan-config]
#    steps:
#      - name: Deploy Account config update on environment ${{ github.event.inputs.environment }}
#        run: |
#          # Generate ID token
#          id_token=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://DHPRunnerAPI" | jq -r '.value')
#          
#          # Invoke DHP Api for Apply
#          apply_response_status_code=$(curl -X POST "$DHP_RUNNER_ENDPOINT/runner/account/${environment}" -H 'accept: application/json' -H 'Content-Type: application/json' -H "X-Github-Auth-Header: Bearer $id_token" -s -o output.json -w "%{http_code}")
#
#          # Print the output
#          cat output.json | jq -r '.detail'
#          
#          # Check if the apply was successful
#          if [[ "${apply_response_status_code}" != "200" ]]; then
#            echo "Error in executing apply"
#            exit 1
#          else
#            echo "Apply executed successfully"
#          fi
